{"timestamp":"2025-08-26T03:42:26.767716","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-26T03:42:26.768686","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/etl_spacex.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-26T03:42:27.409423Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-26T03:42:27.410968Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-26T03:42:27.414586Z","level":"info","event":"Current task name:extract","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-26T03:42:27.415301Z","level":"info","event":"Dag name:spacex_etl","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-26T03:42:28.708830","level":"info","event":"Done. Returned value was:          static_fire_date_utc  ...  fairings\n0    2006-03-17T00:00:00.000Z  ...       NaN\n1                        None  ...       NaN\n2                        None  ...       NaN\n3    2008-09-20T00:00:00.000Z  ...       NaN\n4                        None  ...       NaN\n..                        ...  ...       ...\n200                      None  ...       NaN\n201                      None  ...       NaN\n202                      None  ...       NaN\n203                      None  ...       NaN\n204                      None  ...       NaN\n\n[205 rows x 43 columns]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-26T03:42:28.709754","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0198e477-9b0e-7cc6-bd05-8686b398209e'), task_id='extract', dag_id='spacex_etl', run_id='manual__2025-08-26T03:41:40.446687+00:00', try_number=1, map_index=-1, hostname='d03673dd55af', context_carrier={}, task=<Task(PythonOperator): extract>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 8, 26, 3, 42, 21, 645921, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/spacex_etl/runs/manual__2025-08-26T03%3A41%3A40.446687%2B00%3A00/tasks/extract?try_number=1')","logger":"task"}
{"timestamp":"2025-08-26T03:42:28.992270Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-26T03:42:28.993062Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-26T03:42:28.998644Z","level":"info","event":"Task operator:<Task(PythonOperator): extract>","chan":"stdout","logger":"task"}
